# Things I want this workflow to do:
  # run on dispatch
  # do i have any inputs?
  # checkout
  # create a python venv
  # activate
  # download dependencies
  # run tests and exit on failure
  # build the app locally and exit on failure
  # create a docker image of the app for co-pilot
    # may include build pipeline like from hard2heat
  # use aws co-pilot to deploy app, provisions everything for use, nice and easy to use hopefully
    # need to know aws role to assume
    # make sure github has permissions to access aws resources
    # use image that will hopefully have been created above
    # exit on failure
    # provide url on success

name: "Deploy app to AWS sandbox"

on: 
  workflow_dispatch:
    inputs:
      build_branch:
        description: "Branch to deploy"
        required: true
        type: "string"
        default: "main"

permissions:
  pull-requests: write
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  test-and-deploy-app:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # ref: ${{ inputs.build_branch }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with: 
          python-version: '3.12'
          cache: 'pip'
      - run: |
          pip install -r requirements.txt
          echo installed requirements successfully

      - name: Test python files
        run: |
          pytest tests
          echo all test pass

      - name: Build Docker image
        run: |
         docker build -t flask-app-image -f Dockerfile . 
         docker history flask-app-image  
         echo Successfully built docker image
         echo moving onto the next step 
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_DEPLOY_ROLE }}
          aws-region: eu-west-2
          mask-aws-account-id: true
        run: |
          echo Successfully assumed AWS role

      - name: Install AWS copilot
        uses: ksivamuthu/aws-copilot-github-action@v0.0.8
        with:
          command: install
        run: |
          copilot --version

#      - name: Deploy app with AWS Copilot
#        uses: ksivamuthu/aws-copilot-github-action@v0.0.8
#        with:
#          command: deploy
#          type: 'Load Balanced Web Service'
#          app: flask-api
#          env: dev
#          force: false # optional

